env:
- LIBCLANG_PATH="/usr/lib/llvm/17/lib64"
- LLVM_CONFIG_PATH="/usr/lib/llvm/17/bin/llvm-config"
- CARGO_BUILD_JOBS=10
excludes:
{{ template "portage_excludes" }}
prelude:
- cp -rf package.accept_keywords /etc/portage/
- emerge -1 app-eselect/eselect-repository && eselect repository enable guru && emaint sync -r guru
- emerge -1 dev-build/just && emerge -1 sys-devel/mold
# TODO: Later combine this with flatpak layer
- emerge -1 sys-apps/flatpak
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-session && \
    cd cosmic-session && \
    nice just all
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-applets && \
    cd cosmic-applets && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-applibrary && \
    cd cosmic-applibrary && \
    just vendor && \
    nice just build-vendored
#- |
#    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-bg && \
#    cd cosmic-bg && \
#    just vendor && \
#    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-comp && \
    cd cosmic-comp && \
    make vendor && \
    nice make VENDOR='1' all
#- |
#    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-greeter && \
#    cd cosmic-greeter && \
#    just vendor && \
#    nice just build-vendored
- |
    git clone --recurse-submodules https://github.com/pop-os/cosmic-icons
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-launcher && \
    cd cosmic-launcher && \
    nice just build-release
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-notifications && \
    cd cosmic-notifications && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-panel && \
    cd cosmic-panel && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-randr && \
    cd cosmic-randr && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-screenshot && \
    cd cosmic-screenshot && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-settings-daemon && \
    cd cosmic-settings-daemon && \
    make vendor && \
    nice make prefix='/usr' VENDOR='1' all
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-settings && \
    cd cosmic-settings && \
    just vendor && \
    nice just build-vendored
- |
    RUSTFLAGS="-A warnings -C link-arg=-fuse-ld=mold" git clone --recurse-submodules https://github.com/pop-os/cosmic-workspaces-epoch && \
    cd cosmic-workspaces-epoch && \
    make vendor && \
    nice make prefix='/usr' VENDOR='1' all
steps:
- cd cosmic-session && just install
- cd cosmic-applets && just install
- cd cosmic-applibrary && just install
#- cd cosmic-bg && just install
- cd cosmic-comp && make install
#- cd cosmic-greeter && just install
- cd cosmic-icons && just install
- cd cosmic-launcher && just install
- cd cosmic-notifications && just install
- cd cosmic-panel && just install
- cd cosmic-randr && just install
- cd cosmic-screenshot && just install
- cd cosmic-settings-daemon && make prefix='/usr' install
- cd cosmic-settings && just install
- cd cosmic-workspaces-epoch && make prefix='/usr' install
requires:
- category: "layers"
  name: "wlroots"
  version: ">=0"
